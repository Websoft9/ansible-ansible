#1 Prepare
#2 Install
#3 Configure
#4 Verify


#1 Prepare
- name: Create ansible User
  user:
    name: ansible
    shell: /usr/sbin/nologin

- name: Create ansible directory
  file:
    path: /data/wwwroot/ansible
    state: directory
    owner: ansible
    group: ansible
    recurse: yes
    
#2 Install
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"
  

#3 Configure
- block:
  - name: Copy jdk_env to /etc/profile.d
    template:
      src: rabbitmq_env.sh
      dest: '/etc/profile.d'
      mode: 0640
      
- block:     
  - name: Export ORACLE_HOME environment variable for this shell
    shell: |
      export ORACLE_BASE=/opt/oracle 
      export ORACLE_HOME=/opt/oracle/product/18c/dbhomeXE
      export ORACLE_SID=XE
      export PATH=$PATH:$ORACLE_HOME/bin
    
- name: Download ansible
  get_url:
    dest: /data/wwwroot/ansible
    url: "{{rabbitmq_download_url}}"
    owner: ansible
    group: ansible

- name: Set ansible config
  template:
    src: ansible.conf.jinja2
    dest: /data/wwwroot/ansible/ansible.conf
    owner: ansible
    group: ansible

- name: Setting ansible service
  copy:
    src: ansible.service
    dest: /lib/systemd/system/ansible.service

- name: Restart ansible
  service:
    name: ansible.service
    state: restarted
    enabled: yes

- name: Create ansible System User
  user:
      name: ansible 
      create_home: no 
      home: /opt/ansible
      shell: /usr/sbin/nologin

- name: Download ansible
  unarchive:
      src: "{{rabbitmq_download_url}}"
      dest: /opt/ 
      group: ansible 
      remote_src: yes
      owner: ansible
      mode: g+w

- name: Create the storage directory for files.
  file:
      path: /opt/ansible/data
      state: directory 
      owner: ansible 
      group: ansible
      mode: g+w
      
- name: Set database connection /opt/ansible/config/config.json
  lineinfile:
    dest: /opt/ansible/config/config.json
    regexp: '"DataSource":'
    line: '    "DataSource": "{{rabbitmq_db_user}}:{{rabbitmq_db_password}}@tcp(localhost:3306)/{{rabbitmq_db_name}}?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s",'
    backrefs: yes 

#4 Verify

# set soft link, -f enforce the exist links
# ln -sf src des
- name: set soft link
  shell: |
    ln -sf /opt/ansible  /data/wwwroot
    ln -sf /opt/ansible/config /data/config

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - name: Check Ansible Version
    shell: sudo sh -c "rabbitmqctl status | grep 'Ansible version' 1>> /data/logs/install_version.txt"

  - name: Check Erlang Version
    shell: sudo sh -c 'echo "Erlang $(yum info erlang | grep Version | sed -n 1p)" 1>> /data/logs/install_version.txt'
    when: ansible_os_family=="RedHat"

# check service state
- name: Check Ansible Service
  shell: systemctl status ansible | grep Active*
  register: check_rabbitmq_service
  notify: check_rabbitmq_service
